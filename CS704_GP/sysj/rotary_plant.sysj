import rotaryTable;

rotary_plant(
		input signal rotaryTableTrigger; // turns rotary table while signal is TRUE
		input signal load, deload;
		output signal tableAlignedWithSensor;
		output signal bottleAtPos1, bottleAtPos2, bottleAtPos3, bottleAtPos4, bottleAtPos5, bottleLeftPos5;
		output signal capOnBottleAtPos1;
		)
->
{
	rotaryTable rotaryTable = new rotaryTable(); 	//
	{	// logic for shifting
		while(true) {
			await(rotaryTableTrigger)				// wait for turning signal
			abort(immediate !rotaryTableTrigger) {	// while its on
				waitl(500ms);						// wait 500ms to simulate rotation
				sustain tableAlignedWithSensor;		// send confirmation that turn is complete
			}
			
			rotaryTable.print();
			System.out.println("SHIFTING")
			
			rotaryTable.shift();
			
			rotaryTable.print();
		
	}
	|| // logic for loading/deloading
	{
		while(true) {
			await(load || deload);
			present(load){
				rotaryTable.print();
				System.out.println("LOADING")
				rotaryTable.load();
				rotaryTable.print();
			}
			present(deload){
				rotaryTable.print();
				System.out.println("DELOADING")
				rotaryTable.deload();
				rotaryTable.print();
				
				emit(bottleLeftPos5); // this should be channel, conveyor might not pick up
		}
	}
	||
	{  // emitting bottleAtPosX signals
		{
			while(true){
				if (rotaryTable.index[0] == true) {
					emit(bottleAtPos1);
					pause;
				}
			}
		}
		||
		{
			while(true){
				if (rotaryTable.index[1] == true) {
					emit(bottleAtPos2);
					pause;
				}
			}
		}
		||
		{
			while(true){
				if (rotaryTable.index[2] == true) {
					emit(bottleAtPos3);
					pause;
				}
			}
		}
		||
		{
			while(true){
				if (rotaryTable.index[3] == true) {
					emit(bottleAtPos4);
					pause;
				}
			}
		}
		||
		{
			while(true){
				if (rotaryTable.index[4] == true) {
					emit(bottleAtPos5);
					pause;
				}
			}
		}
	}
}