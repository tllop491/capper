// controller responsible for managing the filler model
// author: Nikolay Petin

import java.util.ArrayList; 

filler_controller(
		
		// from buffer
		input ArrayList channel liquidData;
		
		// from rotary model
		input signal bottleAtPos2;
		
		// from filler model
		input signal dosUnitEvac, dosUnitFilled;
		
		// to rotary
		output Boolean channel readyFiller;
		
		// to filler model
		output signal valveInjectorOnOff, valveInletOnOff;
		output signal dosUnitValveRetract, dosUnitValveExtend;
		output int signal nozzleSelect;
		
		)
->
{
	signal done;
	int signal liquidAmount;
	
	send readyFiller(Boolean.TRUE);
	
	while(true) {
		int i = 0;
		receive liquidData;
		System.out.println("FILLER RECEIVED LIQUID DATA: " + (int)#liquidData.get(i));
		await(bottleAtPos2);					// wait till bottle at pos 2
		System.out.println("FILLER RECEIVED BOTTLEATPOS2");
		send readyFiller(Boolean.FALSE);
		System.out.println("FILLER SEND FALSE");
		trap(T) {								
			while(true) {
				emit liquidAmount((int)#liquidData.get(i));	// emitted signal value persists across ticks until it is over-written
				emit nozzleSelect(i);						// 

				if ((int)#liquidData.get(i) != 0) {			// in case of no liquid
					abort(immediate dosUnitFilled) {		// wait until pressure canister is retracted (top)
						{
							sustain valveInjectorOnOff;		// turn on valve injector
						}
						||
						{
							sustain dosUnitValveRetract;	// retract pressure canister to top
						}
					}		// turn off valve injector
					System.out.println("TURN OFF VALVE INJECTOR");
					abort(immediate dosUnitEvac || done) {  // wait until pressure canister is extended (bottom) or liquid filling is done
						{
							sustain valveInletOnOff;		// open the inlet
							
						}
						||
						{
							sustain dosUnitValveExtend;		// force down pressure canister
						}
						||
						{
							waitl((int)#liquidAmount ms);	// fill liquid for a certain time determined by liquidAmount
							emit done;
						}
					}
				}
				
				System.out.println("NOZZLE " + i + " DONE");
				if (i == 3) {
					exit(T);	// exit if all liquids have been filled
				} else {
					i++;		
				}
				
				pause;			
			}
		} send readyFiller(Boolean.TRUE);
	}
}


